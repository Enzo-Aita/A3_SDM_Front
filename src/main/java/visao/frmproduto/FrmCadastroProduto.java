package visao.frmproduto;

import java.util.ArrayList;
import modelo.Produto;
import javax.swing.JOptionPane;
import modelo.Categoria;

import visao.Mensagem;

public class FrmCadastroProduto extends javax.swing.JFrame {

    private Produto objetoproduto;

    public FrmCadastroProduto() {
        initComponents();
        this.objetoproduto = new Produto();
        carregarCategorias();

    }

    private void carregarCategorias() {
        try {
            JCBCategoria.removeAllItems();

            JCBCategoria.addItem("Selecione uma categoria");

            ArrayList<Categoria> categorias = new Categoria().getMinhaLista();
            for (Categoria categoria : categorias) {
                JCBCategoria.addItem(categoria.getNome());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar categorias: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        JTFproduto = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        JTFpreco = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        JTFquantidade = new javax.swing.JTextField();
        JBCancelar = new javax.swing.JButton();
        JBCadastrar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        JTFquantidademax = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        JTFquantidademin = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        JCBCategoria = new javax.swing.JComboBox<>();
        JCBUnidade = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastro de Alunos");

        jLabel1.setText("Produto:");

        JTFproduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTFprodutoActionPerformed(evt);
            }
        });

        jLabel2.setText("Preço:");

        jLabel3.setText("Categoria:");

        jLabel4.setText("Quantidade:");

        JBCancelar.setText("Cancelar");
        JBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBCancelarActionPerformed(evt);
            }
        });

        JBCadastrar.setText("Cadastrar");
        JBCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBCadastrarActionPerformed(evt);
            }
        });

        jLabel5.setText("Quantidade Máxima:");

        jLabel6.setText("Quantidade Mínima:");

        jLabel7.setText("Unidade:");

        JCBUnidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kg", "g", "Ml", "L" }));

        jLabel8.setFont(new java.awt.Font("Myanmar Text", 0, 24)); // NOI18N
        jLabel8.setText("Cadastro Produto");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(JCBUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(JTFquantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(JTFquantidademax, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(JTFquantidademin, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(JCBCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(JTFpreco, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(134, 134, 134)
                                .addComponent(JBCancelar))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(98, 98, 98)
                        .addComponent(JBCadastrar))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(JTFproduto, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(104, 104, 104)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(126, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)))
                .addComponent(JTFproduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(JTFpreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(JCBUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(JCBCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(JTFquantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(JTFquantidademax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(JTFquantidademin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JBCancelar)
                    .addComponent(JBCadastrar))
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JBCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBCadastrarActionPerformed
        try {
            String produto = "";
            double preco = 0;
            String unidade = "";
            String categoria = "";
            int quantidade = 0;
            int quantidademax = 0;
            int quantidademin = 0;

            if (this.JTFproduto.getText().length() < 2) {
                throw new Mensagem("Produto deve conter ao menos 2 caracteres.");
            } else {
                produto = this.JTFproduto.getText();
            }

            if (this.JTFpreco.getText().isEmpty()) {
                throw new Mensagem("Preço deve ser informado.");
            } else {
                try {
                    preco = Double.parseDouble(this.JTFpreco.getText());
                    if (preco <= 0) {
                        throw new Mensagem("Preço deve ser maior que zero.");
                    }
                } catch (NumberFormatException e) {
                    throw new Mensagem("Preço deve ser um número válido.");
                }
            }
            if (this.JCBCategoria.getSelectedIndex() == -1) {
                throw new Mensagem("Categoria deve ser selecionada");
            } else {
                categoria = this.JCBCategoria.getSelectedItem().toString();

            }

            if (this.JCBUnidade.getSelectedIndex() == -1) {
                throw new Mensagem("Unidade deve conter ao menos 2 caracteres.");
            } else {
                unidade = this.JCBUnidade.getSelectedItem().toString();
            }

            if (this.JTFquantidade.getText().isEmpty()) {
                throw new Mensagem("Quantidade deve ser informada.");
            } else {
                try {
                    quantidade = Integer.parseInt(this.JTFquantidade.getText());
                    if (quantidade < 0) {
                        throw new Mensagem("Quantidade não pode ser negativa.");
                    }
                } catch (NumberFormatException e) {
                    throw new Mensagem("Quantidade deve ser um número válido.");
                }
            }

            if (this.JTFquantidademax.getText().isEmpty()) {
                throw new Mensagem("Quantidade máxima deve ser informada.");
            } else {
                try {
                    quantidademax = Integer.parseInt(this.JTFquantidademax.getText());
                    if (quantidademax <= 0) {
                        throw new Mensagem("Quantidade máxima deve ser maior que zero.");
                    }
                } catch (NumberFormatException e) {
                    throw new Mensagem("Quantidade máxima deve ser um número válido.");
                }
            }

            if (this.JTFquantidademin.getText().isEmpty()) {
                throw new Mensagem("Quantidade mínima deve ser informada.");
            } else {
                try {
                    quantidademin = Integer.parseInt(this.JTFquantidademin.getText());
                    if (quantidademin < 0) {
                        throw new Mensagem("Quantidade mínima não pode ser negativa.");
                    }
                } catch (NumberFormatException e) {
                    throw new Mensagem("Quantidade mínima deve ser um número válido.");
                }
            }

            if (quantidademin >= quantidademax) {
                throw new Mensagem("Quantidade mínima deve ser menor que a máxima.");
            }

            if (quantidade < quantidademin) {
                throw new Mensagem("Quantidade atual está abaixo do mínimo permitido.");
            }

            if (quantidade > quantidademax) {
                throw new Mensagem("Quantidade atual está acima do máximo permitido.");
            }

            if (this.objetoproduto.insertProdutoBD(produto, preco, unidade, categoria,
                    quantidade, quantidademax, quantidademin)) {
                JOptionPane.showMessageDialog(null, "Produto Cadastrado com Sucesso!");
                this.JTFproduto.setText("");
                this.JTFpreco.setText("");
                this.JCBUnidade.setSelectedIndex(0);
                this.JCBCategoria.setSelectedIndex(0);
                this.JTFquantidade.setText("");
                this.JTFquantidademax.setText("");
                this.JTFquantidademin.setText("");
                carregarCategorias();
            }

        } catch (Mensagem erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        } catch (Exception erro2) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro inesperado: " + erro2.getMessage());
        }
    }//GEN-LAST:event_JBCadastrarActionPerformed

    private void JBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_JBCancelarActionPerformed

    private void JTFprodutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTFprodutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTFprodutoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmCadastroProduto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBCadastrar;
    private javax.swing.JButton JBCancelar;
    private javax.swing.JComboBox<String> JCBCategoria;
    private javax.swing.JComboBox<String> JCBUnidade;
    private javax.swing.JTextField JTFpreco;
    private javax.swing.JTextField JTFproduto;
    private javax.swing.JTextField JTFquantidade;
    private javax.swing.JTextField JTFquantidademax;
    private javax.swing.JTextField JTFquantidademin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    // End of variables declaration//GEN-END:variables
}
